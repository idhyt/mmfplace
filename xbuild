#! /bin/bash
# set -ex

function set_version() {
    version=${BUILD_VERSION:-0.1}
    date=$(git show --pretty=format:"%ci %cr" | head -1 | cut -d " " -f1)
    commit=$(git rev-parse HEAD | cut -c1-10)
    # replace version = "0.1", to version = "0.1 (123456 2021-08-01)",
    sed -i "s|version = \".*\"|version = \"$version ($commit $date)\"|" ./builder/cli/src/main.rs
}

function build() {
    cross_info=$(
        cat <<EOF
1) x86_64-unknown-linux-musl
2) aarch64-unknown-linux-musl
3) x86_64-apple-darwin
4) aarch64-apple-darwin
5) x86_64-pc-windows-gnu
选择目标平台的编号:
EOF
    )
    name=mmfplace
    read -p "$cross_info" number
    case $number in
    1)
        platform=x86_64-unknown-linux-musl
        ;;
    2)
        platform=aarch64-unknown-linux-musl
        ;;
    3)
        platform=x86_64-apple-darwin
        ;;
    4)
        platform=aarch64-apple-darwin
        ;;
    5)
        platform=x86_64-pc-windows-gnu
        name=mmfplace.exe
        ;;
    *)
        platform=x86_64-unknown-linux-musl
        ;;
    esac

    dist=mmfplace.$platform
    output=./dist/$dist
    [ -d "$output" ] || mkdir -p $output

    cd builder && cross build --release --target $platform && cd ..
    cp builder/target/$platform/release/$name $output/$name
    cp builder/config/src/default.yaml $output/config.yaml
    cp -rf ./tools $output/tools
    cd ./dist && tar -czvf $dist.tar.gz $dist && rm -rf $dist && cd ..
    echo "Build success, output file: $output.tar.gz"
}

set_version && build
